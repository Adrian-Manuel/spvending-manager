name: OWASP Dependency-Check

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  security-events: write

jobs:
  dependency-check:
    name: Dependency check (OWASP)
    runs-on: ubuntu-latest
    env:
      REPORT_DIR: dependency-check-report
      SARIF_FILE: dependency-check.sarif

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (required by dependency-check)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache dependency-check data (NVD/CPE caches)
        uses: actions/cache@v4
        id: dc-cache
        with:
          path: ~/.local/share/dependency-check
          key: dependency-check-cache-${{ runner.os }}-v1
          restore-keys: |
            dependency-check-cache-${{ runner.os }}-v1

      - name: Run OWASP Dependency-Check
        # usa la action oficial de OWASP (esta action ejecuta el generador de reports)
        uses: owasp/dependency-check-action@v6
        with:
          scan: '.'                       # ruta a escanear (repositorio raíz)
          format: 'SARIF,HTML,XML'        # generamos SARIF (para GitHub code scanning) y HTML/XML (artefactos)
          project: '${{ github.repository }}'
          out: '${{ env.REPORT_DIR }}'
          # Ajustes recomendados:
          # - fail build si encontramos CVSS >= 7.0 (puedes ajustar)
          # - enableExperimental es opcional
          additional_arguments: '--failOnCVSS 7 --enableExperimental'

      - name: Upload SARIF to GitHub Code Scanning
        # sube el archivo SARIF generado para integrarlo en las alertas de seguridad de GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.REPORT_DIR }}/${{ env.SARIF_FILE }}
        continue-on-error: true

      - name: Upload reports as workflow artifacts (HTML + XML)
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: ${{ env.REPORT_DIR }}

      - name: Fail job if high severity vulnerabilities found (optional safety net)
        if: always()
        run: |
          # exit with non-zero if the XML report contains CVSS >= 7 findings
          XML="${{ env.REPORT_DIR }}/dependency-check-report.xml"
          if [ -f "$XML" ]; then
            # Busca CVSS score >= 7 en el XML (simple check). Ajusta según necesidades.
            if grep -Eo 'cvss:score="([0-9]+\.[0-9]+|[0-9]+)"' "$XML" | awk -F\" '{ if ($2+0 >= 7) exit 1 }'; then
              echo "No critical/high vulnerabilities with CVSS >= 7 found by check above."
            else
              echo "Found vulnerabilities with CVSS >= 7 — failing the job."
              exit 1
            fi
          else
            echo "XML report not found; skipping severity check."
          fi