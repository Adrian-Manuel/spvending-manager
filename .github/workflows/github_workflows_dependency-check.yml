name: OWASP Dependency-Check

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  security-events: write

env:
  REPORT_DIR: dependency-check-report
  SARIF_FILE: dependency-check.sarif
  DC_VERSION: 8.4.0  # ajusta si quieres otra versión

jobs:
  dependency-check:
    name: Dependency-Check (OWASP) - Docker fallback
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (required for CLI mode & some dependencies)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Create report dir
        run: mkdir -p ${{ env.REPORT_DIR }}

      - name: Cache dependency-check data (NVD/CPE caches)
        uses: actions/cache@v4
        id: dc-cache
        with:
          path: ~/.local/share/dependency-check
          # cambia la key si actualizas DC_VERSION para forzar recache
          key: dependency-check-cache-${{ runner.os }}-v${{ env.DC_VERSION }}-${{ hashFiles('**/pom.xml','**/package-lock.json','**/yarn.lock') }}
          restore-keys: |
            dependency-check-cache-${{ runner.os }}-v${{ env.DC_VERSION }}-

      - name: Run Dependency-Check (Docker)
        run: |
          echo "Running OWASP Dependency-Check via Docker image..."
          docker run --rm \
            -v "${{ github.workspace }}:/src:ro" \
            -v "${{ github.workspace }}/${{ env.REPORT_DIR }}:/report" \
            -v ~/.local/share/dependency-check:/root/.local/share/dependency-check \
            owasp/dependency-check:${{ env.DC_VERSION }} \
            --project "${{ github.repository }}" \
            --scan /src \
            --out /report \
            --format SARIF \
            --format HTML \
            --format XML \
            --enableExperimental \
            --failOnCVSS 7

      # -- ALTERNATIVA: Si prefieres no usar Docker, descomenta el bloque siguiente y comenta el bloque Docker anterior.
      # - name: Run Dependency-Check (CLI download)
      #   run: |
      #     set -e
      #     DC_DIR=${{ runner.temp }}/dependency-check
      #     mkdir -p "$DC_DIR"
      #     DC_ZIP="$DC_DIR/dependency-check-${{ env.DC_VERSION }}-release.zip"
      #     curl -sSL -o "$DC_ZIP" "https://github.com/jeremylong/DependencyCheck/releases/download/v${{ env.DC_VERSION }}/dependency-check-${{ env.DC_VERSION }}-release.zip"
      #     unzip -q "$DC_ZIP" -d "$DC_DIR"
      #     CLI="$DC_DIR/dependency-check/bin/dependency-check.sh"
      #     chmod +x "$CLI"
      #     "$CLI" --project "${{ github.repository }}" --scan "${{ github.workspace }}" --out "${{ github.workspace }}/${{ env.REPORT_DIR }}" --format SARIF,HTML,XML --enableExperimental --failOnCVSS 7

      - name: List generated reports
        run: ls -la ${{ env.REPORT_DIR }} || true

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.REPORT_DIR }}/${{ env.SARIF_FILE }}
        continue-on-error: true

      - name: Upload reports as workflow artifacts (HTML + XML + SARIF)
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: ${{ env.REPORT_DIR }}

      - name: Optional severity fail-safe (CI-level)
        if: always()
        run: |
          XML="${{ env.REPORT_DIR }}/dependency-check-report.xml"
          if [ -f "$XML" ]; then
            # Exit non-zero if any CVSS >= 7 present (simple awk check)
            if grep -Eo 'cvss:score="([0-9]+\.[0-9]+|[0-9]+)"' "$XML" | awk -F\" '{ if ($2+0 >= 7) exit 1 }'; then
              echo "No vulnerabilities with CVSS >= 7 found."
            else
              echo "Found vulnerabilities with CVSS >= 7 — failing the job."
              exit 1
            fi
          else
            echo "XML report not found; skipping severity check."
          fi
