image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: unix:///var/run/docker.sock
  IMAGE_TAG: ${CI_COMMIT_TAG:-latest}
  IMAGE_NAME: "$REGISTRY_URL/adrian-manuel/spvending-managment${CI_COMMIT_TAG:+:$CI_COMMIT_TAG}"
  IMAGE_NAME_LATEST: "$REGISTRY_URL/adrian-manuel/spvending-managment:latest"
  COMPOSE_PROJECT_NAME: "spvending-managment"
  REGISTRY_URL: "192.168.74.132:5050"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
stages:
  - build
  - deploy

build_image:
  stage: build
  tags:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - echo "Validando nombre de imagen..."
    - echo "IMAGE_NAME:$IMAGE_NAME"
    - echo "IMAGE_NAME_LATEST:$IMAGE_NAME_LATEST"
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY_URL
    - docker-compose -f docker-compose.yml build --no-cache --pull
    - docker tag spvending-api-image "$IMAGE_NAME"
    - docker push "$IMAGE_NAME"
    - docker tag spvending-api-image "$IMAGE_NAME_LATEST"
    - docker push "$IMAGE_NAME_LATEST"
  after_script:
    - docker logout $REGISTRY_URL

deploy_app:
  stage: deploy
  tags:
    - deploy
  needs: ["build_image"]
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "=== DESPLEGANDO VERSIÓN ==="
    - $env:DOCKER_HOST = "npipe:////./pipe/docker_engine"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$REGISTRY_URL"
    - docker pull "$IMAGE_NAME_LATEST"
    - docker-compose -f docker-compose.deploy.yml down --remove-orphans
    - docker-compose -f docker-compose.deploy.yml up -d --force-recreate
    - echo "=== CONTENEDORES EN EJECUCIÓN ==="
    - docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"
  after_script:
    - docker logout $REGISTRY_URL