image: docker:latest  # Usaremos Docker para los builds

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: unix:///var/run/docker.sock
  IMAGE_TAG: ${CI_COMMIT_TAG:-latest}
  IMAGE_NAME: "$REGISTRY_URL/adrian-manuel/spvending-managment:$IMAGE_TAG"
  IMAGE_NAME_LATEST: "$REGISTRY_URL/adrian-manuel/spvending-managment:latest"
  COMPOSE_PROJECT_NAME: "spvending-managment"
  REGISTRY_URL: "192.168.74.132:5050"
stages:
  - build
  - deploy

build_image:
  stage: build
  tags:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY_URL
    - docker-compose -f docker-compose.yml build
    - docker tag spvending-api-image $IMAGE_NAME
    - docker push $IMAGE_NAME
    - docker tag spvending-api-image $IMAGE_NAME_LATEST;
    - docker push $IMAGE_NAME_LATEST;
  after_script:
    - docker logout $REGISTRY_URL
  only:
    - main
deploy_app:
  stage: deploy
  tags:
    - deploy
  needs: ["build_image"]
  script:
    - $env:DOCKER_HOST = "npipe:////./pipe/docker_engine"
    - $env:CI_REGISTRY_PASSWORD | docker login -u "$env:CI_REGISTRY_USER" --password-stdin "$env:REGISTRY_URL"
    - docker pull "$env:IMAGE_NAME_LATEST"
    - docker-compose -f docker-compose.deploy.yml down --remove-orphans
    - docker-compose -f docker-compose.deploy.yml up -d --force-recreate
    - echo "=== RUNNING CONTAINERS ==="
    - docker ps
  only:
    - main